状态模式的几个有点是
1.进行了非常好的封装，外部调用Context这种类的时候完全不用关心内部的状态
2.符合OCP原则，如果多了状态的话，只要增加子类并且增加状态方法。不用去修改，只增加
3.简化了控制类Context的判断逻辑，其实是把这部分逻辑下放到给个具体实现的子类中了。同时子类的逻辑也更加的清晰，此处也符合SRP

状态模式的缺点：
子类太特么多了，维护起来其实个人觉得并不是最方便的。还容易类膨胀。用的时候自己衡量

状态模式编程的几个注意点：
1.约定俗成Context环境类中的Status都声明为public static
2.约定俗成Context环境类有Status类的所有行为，且用委托的方式完成


状态模式几个比较合适的场景：
1.行为随状态改变而改动很大，比如做权限系统的时候
2.判断调节非常复杂，放在一起会导致逻辑非常复杂的时候
