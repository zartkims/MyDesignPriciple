总的来说观察者模式是一个比较简单的设计模式
他的优点是：
1.观察者和被观察者之间是抽象耦合，非常容易拓展
2.可以建立一套触发链，并且进行动态调整

存在的一些问题:
1.当链比较长的时候效率会成为问题，特别是如果其中一个环节出了问题可能会卡死后面环节
  处理的方法有两种：
  a.使用每个处理都开个新线程，这样的做法为异步架构
  b.使用缓存机制，缓存足够的资源这样的做法为 同步架构，也是比较好的方法
 
2.一般如果一个节点既是观察者也是被观察者的时候可能会导致一些维护上的逻辑复杂,
	因此一般根据经验值一般一个节点最多只能是一个观察者的同时是一个被观察者,多重就太复杂了
	

观察者模式比较合适的使用场景有:
 1.一系列有关联行为的场景
 2.多级事件触发场景 (这个尽量避免吧)
 3.跨系统的消息交换场景
 
 一般来说观察者模式 的update方法接受两个参数比较合适
 第一个参数是 被观察者对象
 第二个参数是 DTO对象 专门用来做数据处理的